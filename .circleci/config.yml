version: 2.1

parameters:
  run_cleanup_workflow:
    type: boolean
    default: false
  target_workflow_id:
    type: string
    default: ""
     
commands:
  queryapi:
    description: Query status of workflow
    steps:
      - run: 
          name: Start cleanup workflow
          command: |
            WORKFLOW_ID=\<< pipeline.parameters.target_workflow_id >>
            json=$(curl -s -H 'Accept: application/json' -X GET -u $CIRCLECI_TOKEN: "https://circleci.com/api/v2/workflow/$WORKFLOW_ID")
            echo $json
  triggercleanupworkflow:
    description: Trigger cleanup workflow
    steps:
      - run:
          name: Trigger cleanup workflow
          command: |
            curl --request POST 'https://circleci.com/api/v2/project/github/ogii/test-cleanup-job/pipeline' \
            --header "circle-token: $CIRCLE_TOKEN" \
            --header 'content-type: application/json' \
            --data '{"parameters":{"run_cleanup_workflow":true, "target_workflow_id":"<< pipeline.parameters.target_workflow_id >>"}}'
jobs:
  build:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - triggercleanupworkflow
      - run: echo "build"
  deploy:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - run: echo "deploy"
  deploy-slow:
    docker:
      - image: cimg/base:2021.07
    steps:
      - run: sleep 100
  cleanup:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - run: |
          while true; do
            json=$(curl -s -H 'Accept: application/json' -X GET https://circleci.com/api/v2/workflow/<< pipeline.parameters.target_workflow_id >>?circle-token=${CIRCLE_TOKEN})
            echo $json
            exit 0
          done
      - run: echo "cleanup"

workflows:
  workflow1:
    when:
      equal: [false, << pipeline.parameters.run_cleanup_workflow >>]
    jobs:
      - build
      - deploy-slow:
          requires:
            - build
      - deploy:
          requires:
            - build
  cleanupworkflow:
    when:
      equal: [true, << pipeline.parameters.run_cleanup_workflow >>]
    jobs:
      - cleanup
